//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DegreeClock.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.6.0.0")]
    internal sealed partial class DarkWindowlessTheme : global::System.Configuration.ApplicationSettingsBase {
        
        private static DarkWindowlessTheme defaultInstance = ((DarkWindowlessTheme)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new DarkWindowlessTheme())));
        
        public static DarkWindowlessTheme Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color DayColor {
            get {
                return ((global::System.Drawing.Color)(this["DayColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("36, 36, 36")]
        public global::System.Drawing.Color NightColor {
            get {
                return ((global::System.Drawing.Color)(this["NightColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("193, 193, 255")]
        public global::System.Drawing.Color TimePassedColor {
            get {
                return ((global::System.Drawing.Color)(this["TimePassedColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Maroon")]
        public global::System.Drawing.Color CurrentTimeLine {
            get {
                return ((global::System.Drawing.Color)(this["CurrentTimeLine"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color FormBackgroundColor {
            get {
                return ((global::System.Drawing.Color)(this["FormBackgroundColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("128, 128, 255")]
        public global::System.Drawing.Color TimeTextColor {
            get {
                return ((global::System.Drawing.Color)(this["TimeTextColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Courier New, 10.8pt, style=Bold")]
        public global::System.Drawing.Font TimeTextFont {
            get {
                return ((global::System.Drawing.Font)(this["TimeTextFont"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("64, 64, 128")]
        public global::System.Drawing.Color DegreeNumbersColor {
            get {
                return ((global::System.Drawing.Color)(this["DegreeNumbersColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tahoma, 7pt")]
        public global::System.Drawing.Font DegreeNumbersFont {
            get {
                return ((global::System.Drawing.Font)(this["DegreeNumbersFont"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("128, 128, 192")]
        public global::System.Drawing.Color DegreeLinesColor {
            get {
                return ((global::System.Drawing.Color)(this["DegreeLinesColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color CurrentDegreeNumberColor {
            get {
                return ((global::System.Drawing.Color)(this["CurrentDegreeNumberColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tahoma, 7pt")]
        public global::System.Drawing.Font ClockNumbersFont {
            get {
                return ((global::System.Drawing.Font)(this["ClockNumbersFont"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("RosyBrown")]
        public global::System.Drawing.Color ClockNumbersColor {
            get {
                return ((global::System.Drawing.Color)(this["ClockNumbersColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("128, 128, 192")]
        public global::System.Drawing.Color ClockHoursColor {
            get {
                return ((global::System.Drawing.Color)(this["ClockHoursColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Tahoma, 7pt, style=Bold")]
        public global::System.Drawing.Font ClockHoursFont {
            get {
                return ((global::System.Drawing.Font)(this["ClockHoursFont"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowCurrentTimeFill {
            get {
                return ((bool)(this["ShowCurrentTimeFill"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowRegTime {
            get {
                return ((bool)(this["ShowRegTime"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowDegTime {
            get {
                return ((bool)(this["ShowDegTime"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowDegreeNumbers {
            get {
                return ((bool)(this["ShowDegreeNumbers"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowWordsDegTime {
            get {
                return ((bool)(this["ShowWordsDegTime"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowWordsRegTime {
            get {
                return ((bool)(this["ShowWordsRegTime"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DegTimeLong")]
        public global::DegreeClock.TimeNotation DegTimeLabelNotation {
            get {
                return ((global::DegreeClock.TimeNotation)(this["DegTimeLabelNotation"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("RegTime24Long")]
        public global::DegreeClock.TimeNotation RegTimeLabelNotation {
            get {
                return ((global::DegreeClock.TimeNotation)(this["RegTimeLabelNotation"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DegTimeShort")]
        public global::DegreeClock.TimeNotation TitleBarNotation {
            get {
                return ((global::DegreeClock.TimeNotation)(this["TitleBarNotation"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowTimeInTitleBar {
            get {
                return ((bool)(this["ShowTimeInTitleBar"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowDegreeLines {
            get {
                return ((bool)(this["ShowDegreeLines"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HideWindowBorder {
            get {
                return ((bool)(this["HideWindowBorder"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowWindowBorder {
            get {
                return ((bool)(this["ShowWindowBorder"]));
            }
        }
    }
}
